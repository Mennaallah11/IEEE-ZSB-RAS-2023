
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004d6  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000004d6  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000002a  00000000  00000000  00000505  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  0000052f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000177f  00000000  00000000  00000637  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007d9  00000000  00000000  00001db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ac9  00000000  00000000  0000258f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000288  00000000  00000000  00003058  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b0  00000000  00000000  000032e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b66  00000000  00000000  00003590  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  000040f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000434  00000434  000004c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000041c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    0000004e  00000272  00000272  00000306  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ADC_enuInit 00000034  00000344  00000344  000003d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ADC_eunGetDigitalValueSynchNonBlocking 00000074  00000124  00000124  000001b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_16 00000068  0000020a  0000020a  0000029e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .bss.ADC_pfNotification 00000002  00800060  00800060  000004d6  2**0
                  ALLOC
 19 .bss.ADC_u8BusyFlag 00000001  0080006a  0080006a  000004d6  2**0
                  ALLOC
 20 .text.DIO_enuInit 00000022  000003d8  000003d8  0000046c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.Timers_enuTimer0Init 00000034  00000378  00000378  0000040c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.Timers_enuTimer1Init 00000040  00000304  00000304  00000398  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.Timers_enuTimer0SetCompareMatchValue 00000006  0000042e  0000042e  000004c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.Timers_enuServoAngle 0000002c  000003ac  000003ac  00000440  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__vector_11 00000076  000000ae  000000ae  00000142  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__vector_10 00000072  00000198  00000198  0000022c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .bss.Local_u16CounterCTC.1636 00000002  00800062  00800062  000004d6  2**0
                  ALLOC
 28 .bss.Local_u16CounterOvf.1630 00000002  00800064  00800064  000004d6  2**0
                  ALLOC
 29 .bss.Timer0_pftimer0CTC 00000002  00800066  00800066  000004d6  2**0
                  ALLOC
 30 .bss.Timer0_pftimer0OVF 00000002  00800068  00800068  000004d6  2**0
                  ALLOC
 31 .text.libgcc.div 00000044  000002c0  000002c0  00000354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.libgcc.mul 0000001e  000003fa  000003fa  0000048e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__dummy_fini 00000002  0000043c  0000043c  000004d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__dummy_funcs_on_exit 00000002  0000043e  0000043e  000004d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__dummy_simulator_exit 00000002  00000440  00000440  000004d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.exit    00000016  00000418  00000418  000004ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text._Exit   00000004  00000438  00000438  000004cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
   8:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
   c:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  10:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  14:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  18:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  1c:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  20:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  24:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  28:	0c 94 cc 00 	jmp	0x198	; 0x198 <__vector_10>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <_etext>
  30:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  34:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  38:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  3c:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  40:	0c 94 05 01 	jmp	0x20a	; 0x20a <__vector_16>
  44:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  48:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  4c:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>
  50:	0c 94 1a 02 	jmp	0x434	; 0x434 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 6b       	ori	r16, 0xB0	; 176
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d8 e0       	ldi	r29, 0x08	; 8
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 39 01 	call	0x272	; 0x272 <main>
  a6:	0c 94 0c 02 	jmp	0x418	; 0x418 <exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

00000434 <__bad_interrupt>:
 434:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000272 <main>:
#include "../MCAL/AVR_REG.h"
#define F_CPU 8000000UL
#include <util/delay.h>

int main()
{
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	00 d0       	rcall	.+0      	; 0x278 <main+0x6>
 278:	cd b7       	in	r28, 0x3d	; 61
 27a:	de b7       	in	r29, 0x3e	; 62
	u16 digitalValue = 0 ;
 27c:	1a 82       	std	Y+2, r1	; 0x02
 27e:	19 82       	std	Y+1, r1	; 0x01
	u16 analogValue_led = 0 ;

    ADC_enuInit();
 280:	0e 94 a2 01 	call	0x344	; 0x344 <ADC_enuInit>
    DIO_enuInit();
 284:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <DIO_enuInit>
	Timers_enuTimer0Init();
 288:	0e 94 bc 01 	call	0x378	; 0x378 <Timers_enuTimer0Init>
	Timers_enuTimer1Init();
 28c:	0e 94 82 01 	call	0x304	; 0x304 <Timers_enuTimer1Init>
 
	while(1)
	{
		ADC_eunGetDigitalValueSynchNonBlocking(ADC_u8_CHANNEL0,&digitalValue);
 290:	be 01       	movw	r22, r28
 292:	6f 5f       	subi	r22, 0xFF	; 255
 294:	7f 4f       	sbci	r23, 0xFF	; 255
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 92 00 	call	0x124	; 0x124 <ADC_eunGetDigitalValueSynchNonBlocking>
		analogValue_led = ((digitalValue*256UL) / 1024);
 29c:	89 81       	ldd	r24, Y+1	; 0x01
 29e:	9a 81       	ldd	r25, Y+2	; 0x02
 2a0:	a0 e0       	ldi	r26, 0x00	; 0
 2a2:	b0 e0       	ldi	r27, 0x00	; 0
 2a4:	b6 95       	lsr	r27
 2a6:	a7 95       	ror	r26
 2a8:	97 95       	ror	r25
 2aa:	87 95       	ror	r24
 2ac:	b6 95       	lsr	r27
 2ae:	a7 95       	ror	r26
 2b0:	97 95       	ror	r25
 2b2:	87 95       	ror	r24
		Timers_enuTimer0SetCompareMatchValue(analogValue_led);
 2b4:	0e 94 17 02 	call	0x42e	; 0x42e <Timers_enuTimer0SetCompareMatchValue>
		Timers_enuServoAngle(45);
 2b8:	8d e2       	ldi	r24, 0x2D	; 45
 2ba:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Timers_enuServoAngle>
 2be:	e8 cf       	rjmp	.-48     	; 0x290 <main+0x1e>

Disassembly of section .text.ADC_enuInit:

00000344 <ADC_enuInit>:
ERROR ADC_enuInit(void)
{

/*	1- Select Vref  */
#if (ADC_VREF == AVCC)
CLR_BIT(ADMUX,REFS1);
 344:	87 b1       	in	r24, 0x07	; 7
 346:	8f 77       	andi	r24, 0x7F	; 127
 348:	87 b9       	out	0x07, r24	; 7
SET_BIT(ADMUX,REFS0);
 34a:	87 b1       	in	r24, 0x07	; 7
 34c:	80 64       	ori	r24, 0x40	; 64
 34e:	87 b9       	out	0x07, r24	; 7
SET_BIT(ADMUX,REFS0);
#endif

/* 2- Right or Left Adjust */
#if (ADC_ADJUST == RIGHT_ADJUST)
CLR_BIT(ADMUX,ADLAR);
 350:	87 b1       	in	r24, 0x07	; 7
 352:	8f 7d       	andi	r24, 0xDF	; 223
 354:	87 b9       	out	0x07, r24	; 7
SET_BIT(ADMUX,ADLAR);
#endif

/* 3- CONVERSION MODE */
#if ADC_CONVERSION_MODE == START_CONVERSION
CLR_BIT(ADCSRA,ADATE);
 356:	86 b1       	in	r24, 0x06	; 6
 358:	8f 7d       	andi	r24, 0xDF	; 223
 35a:	86 b9       	out	0x06, r24	; 6
#elif DEVISION_FACTOR == DIV_BY_32
SET_BIT(ADCSRA, ADPS2);
CLR_BIT(ADCSRA, ADPS1);
SET_BIT(ADCSRA, ADPS0);
#elif DEVISION_FACTOR == DIV_BY_64
SET_BIT(ADCSRA, ADPS2);
 35c:	86 b1       	in	r24, 0x06	; 6
 35e:	84 60       	ori	r24, 0x04	; 4
 360:	86 b9       	out	0x06, r24	; 6
SET_BIT(ADCSRA, ADPS1);
 362:	86 b1       	in	r24, 0x06	; 6
 364:	82 60       	ori	r24, 0x02	; 2
 366:	86 b9       	out	0x06, r24	; 6
CLR_BIT(ADCSRA, ADPS0);
 368:	86 b1       	in	r24, 0x06	; 6
 36a:	8e 7f       	andi	r24, 0xFE	; 254
 36c:	86 b9       	out	0x06, r24	; 6
SET_BIT(ADCSRA, ADPS2);
SET_BIT(ADCSRA, ADPS1);
SET_BIT(ADCSRA, ADPS0);
#endif
/*5- Enable ADC*/
SET_BIT(ADCSRA,ADEN);
 36e:	86 b1       	in	r24, 0x06	; 6
 370:	80 68       	ori	r24, 0x80	; 128
 372:	86 b9       	out	0x06, r24	; 6
return STD_OK ;
}
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	08 95       	ret

Disassembly of section .text.ADC_eunGetDigitalValueSynchNonBlocking:

00000124 <ADC_eunGetDigitalValueSynchNonBlocking>:
{
return STD_NOTOK;
}
return STD_OK;

}
 124:	80 32       	cpi	r24, 0x20	; 32
 126:	80 f5       	brcc	.+96     	; 0x188 <ADC_eunGetDigitalValueSynchNonBlocking+0x64>
 128:	61 15       	cp	r22, r1
 12a:	71 05       	cpc	r23, r1
 12c:	79 f1       	breq	.+94     	; 0x18c <ADC_eunGetDigitalValueSynchNonBlocking+0x68>
 12e:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <ADC_u8BusyFlag>
 132:	91 11       	cpse	r25, r1
 134:	2d c0       	rjmp	.+90     	; 0x190 <ADC_eunGetDigitalValueSynchNonBlocking+0x6c>
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <ADC_u8BusyFlag>
 13c:	97 b1       	in	r25, 0x07	; 7
 13e:	90 7e       	andi	r25, 0xE0	; 224
 140:	97 b9       	out	0x07, r25	; 7
 142:	97 b1       	in	r25, 0x07	; 7
 144:	89 2b       	or	r24, r25
 146:	87 b9       	out	0x07, r24	; 7
 148:	86 b1       	in	r24, 0x06	; 6
 14a:	80 64       	ori	r24, 0x40	; 64
 14c:	86 b9       	out	0x06, r24	; 6
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	dc 01       	movw	r26, r24
 154:	03 c0       	rjmp	.+6      	; 0x15c <ADC_eunGetDigitalValueSynchNonBlocking+0x38>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	a1 1d       	adc	r26, r1
 15a:	b1 1d       	adc	r27, r1
 15c:	34 99       	sbic	0x06, 4	; 6
 15e:	06 c0       	rjmp	.+12     	; 0x16c <ADC_eunGetDigitalValueSynchNonBlocking+0x48>
 160:	80 35       	cpi	r24, 0x50	; 80
 162:	23 ec       	ldi	r18, 0xC3	; 195
 164:	92 07       	cpc	r25, r18
 166:	a1 05       	cpc	r26, r1
 168:	b1 05       	cpc	r27, r1
 16a:	a8 f3       	brcs	.-22     	; 0x156 <ADC_eunGetDigitalValueSynchNonBlocking+0x32>
 16c:	34 9b       	sbis	0x06, 4	; 6
 16e:	12 c0       	rjmp	.+36     	; 0x194 <ADC_eunGetDigitalValueSynchNonBlocking+0x70>
 170:	86 b1       	in	r24, 0x06	; 6
 172:	80 61       	ori	r24, 0x10	; 16
 174:	86 b9       	out	0x06, r24	; 6
 176:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <ADC_u8BusyFlag>
 17a:	84 b1       	in	r24, 0x04	; 4
 17c:	95 b1       	in	r25, 0x05	; 5
 17e:	fb 01       	movw	r30, r22
 180:	91 83       	std	Z+1, r25	; 0x01
 182:	80 83       	st	Z, r24
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	08 95       	ret
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	08 95       	ret
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	08 95       	ret
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	08 95       	ret
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	08 95       	ret

Disassembly of section .text.__vector_16:

0000020a <__vector_16>:
/********************************************************/

/* Prototype for ADC ISR */
void __vector_16(void)  __attribute__((signal));
void __vector_16(void)
{
 20a:	1f 92       	push	r1
 20c:	0f 92       	push	r0
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	0f 92       	push	r0
 212:	11 24       	eor	r1, r1
 214:	2f 93       	push	r18
 216:	3f 93       	push	r19
 218:	4f 93       	push	r20
 21a:	5f 93       	push	r21
 21c:	6f 93       	push	r22
 21e:	7f 93       	push	r23
 220:	8f 93       	push	r24
 222:	9f 93       	push	r25
 224:	af 93       	push	r26
 226:	bf 93       	push	r27
 228:	ef 93       	push	r30
 22a:	ff 93       	push	r31
if(ADC_pfNotification != NULL)
 22c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 230:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 234:	89 2b       	or	r24, r25
 236:	61 f0       	breq	.+24     	; 0x250 <__vector_16+0x46>
{
/* Clear Flag */
ADC_u8BusyFlag = 0;
 238:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <ADC_u8BusyFlag>
/* Clear PIE of ADC */
CLR_BIT(ADCSRA,ADIE);
 23c:	86 b1       	in	r24, 0x06	; 6
 23e:	87 7f       	andi	r24, 0xF7	; 247
 240:	86 b9       	out	0x06, r24	; 6
/* Calling Notification function */
ADC_pfNotification(ADC_u16_ADC_REG);
 242:	84 b1       	in	r24, 0x04	; 4
 244:	95 b1       	in	r25, 0x05	; 5
 246:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 24a:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 24e:	09 95       	icall
}
 250:	ff 91       	pop	r31
 252:	ef 91       	pop	r30
 254:	bf 91       	pop	r27
 256:	af 91       	pop	r26
 258:	9f 91       	pop	r25
 25a:	8f 91       	pop	r24
 25c:	7f 91       	pop	r23
 25e:	6f 91       	pop	r22
 260:	5f 91       	pop	r21
 262:	4f 91       	pop	r20
 264:	3f 91       	pop	r19
 266:	2f 91       	pop	r18
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

Disassembly of section .text.DIO_enuInit:

000003d8 <DIO_enuInit>:

ERROR DIO_enuInit(void)
{
	ERROR Local_enuErrorStatus = STD_OK;

	DDRA = CONC(DIO_u8PA7_DIR , DIO_u8PA6_DIR , DIO_u8PA5_DIR , DIO_u8PA4_DIR , DIO_u8PA3_DIR , DIO_u8PA2_DIR , DIO_u8PA1_DIR , DIO_u8PA0_DIR);
 3d8:	8e ef       	ldi	r24, 0xFE	; 254
 3da:	8a bb       	out	0x1a, r24	; 26
	PORTA = CONC(DIO_u8PA7_VALUE , DIO_u8PA6_VALUE , DIO_u8PA5_VALUE , DIO_u8PA4_VALUE , DIO_u8PA3_VALUE , DIO_u8PA2_VALUE , DIO_u8PA1_VALUE , DIO_u8PA0_VALUE);
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	8b bb       	out	0x1b, r24	; 27

	DDRB = CONC(DIO_u8PB7_DIR , DIO_u8PB6_DIR , DIO_u8PB5_DIR , DIO_u8PB4_DIR , DIO_u8PB3_DIR , DIO_u8PB2_DIR , DIO_u8PB1_DIR , DIO_u8PB0_DIR);
 3e0:	8f e5       	ldi	r24, 0x5F	; 95
 3e2:	87 bb       	out	0x17, r24	; 23
	PORTB = CONC(DIO_u8PB7_VALUE , DIO_u8PB6_VALUE , DIO_u8PB5_VALUE , DIO_u8PB4_VALUE , DIO_u8PB3_VALUE , DIO_u8PB2_VALUE , DIO_u8PB1_VALUE , DIO_u8PB0_VALUE);
 3e4:	81 e7       	ldi	r24, 0x71	; 113
 3e6:	88 bb       	out	0x18, r24	; 24

	DDRC = CONC(DIO_u8PC7_DIR , DIO_u8PC6_DIR , DIO_u8PC5_DIR , DIO_u8PC4_DIR , DIO_u8PC3_DIR , DIO_u8PC2_DIR , DIO_u8PC1_DIR , DIO_u8PC0_DIR);
 3e8:	85 e9       	ldi	r24, 0x95	; 149
 3ea:	84 bb       	out	0x14, r24	; 20
	PORTC = CONC(DIO_u8PC7_VALUE , DIO_u8PC6_VALUE , DIO_u8PC5_VALUE , DIO_u8PC4_VALUE , DIO_u8PC3_VALUE , DIO_u8PC2_VALUE , DIO_u8PC1_VALUE , DIO_u8PC0_VALUE);
 3ec:	88 e6       	ldi	r24, 0x68	; 104
 3ee:	85 bb       	out	0x15, r24	; 21

	DDRD = CONC(DIO_u8PD7_DIR , DIO_u8PD6_DIR , DIO_u8PD5_DIR , DIO_u8PD4_DIR , DIO_u8PD3_DIR , DIO_u8PD2_DIR , DIO_u8PD1_DIR , DIO_u8PD0_DIR);
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	81 bb       	out	0x11, r24	; 17
	PORTD = CONC(DIO_u8PD7_VALUE , DIO_u8PD6_VALUE , DIO_u8PD5_VALUE , DIO_u8PD4_VALUE , DIO_u8PD3_VALUE , DIO_u8PD2_VALUE , DIO_u8PD1_VALUE , DIO_u8PD0_VALUE);
 3f4:	12 ba       	out	0x12, r1	; 18

	return Local_enuErrorStatus;
}
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	08 95       	ret

Disassembly of section .text.Timers_enuTimer0Init:

00000378 <Timers_enuTimer0Init>:
	else
	{
		return STD_NOTOK ;
	}
	return STD_OK;
}
 378:	83 b7       	in	r24, 0x33	; 51
 37a:	80 64       	ori	r24, 0x40	; 64
 37c:	83 bf       	out	0x33, r24	; 51
 37e:	83 b7       	in	r24, 0x33	; 51
 380:	88 60       	ori	r24, 0x08	; 8
 382:	83 bf       	out	0x33, r24	; 51
 384:	83 b7       	in	r24, 0x33	; 51
 386:	80 62       	ori	r24, 0x20	; 32
 388:	83 bf       	out	0x33, r24	; 51
 38a:	83 b7       	in	r24, 0x33	; 51
 38c:	8f 7e       	andi	r24, 0xEF	; 239
 38e:	83 bf       	out	0x33, r24	; 51
 390:	89 b7       	in	r24, 0x39	; 57
 392:	82 60       	ori	r24, 0x02	; 2
 394:	89 bf       	out	0x39, r24	; 57
 396:	83 b7       	in	r24, 0x33	; 51
 398:	8b 7f       	andi	r24, 0xFB	; 251
 39a:	83 bf       	out	0x33, r24	; 51
 39c:	83 b7       	in	r24, 0x33	; 51
 39e:	82 60       	ori	r24, 0x02	; 2
 3a0:	83 bf       	out	0x33, r24	; 51
 3a2:	83 b7       	in	r24, 0x33	; 51
 3a4:	8e 7f       	andi	r24, 0xFE	; 254
 3a6:	83 bf       	out	0x33, r24	; 51
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	08 95       	ret

Disassembly of section .text.Timers_enuTimer1Init:

00000304 <Timers_enuTimer1Init>:
 304:	8f b5       	in	r24, 0x2f	; 47
 306:	8e 7f       	andi	r24, 0xFE	; 254
 308:	8f bd       	out	0x2f, r24	; 47
 30a:	8f b5       	in	r24, 0x2f	; 47
 30c:	82 60       	ori	r24, 0x02	; 2
 30e:	8f bd       	out	0x2f, r24	; 47
 310:	8e b5       	in	r24, 0x2e	; 46
 312:	88 60       	ori	r24, 0x08	; 8
 314:	8e bd       	out	0x2e, r24	; 46
 316:	8e b5       	in	r24, 0x2e	; 46
 318:	80 61       	ori	r24, 0x10	; 16
 31a:	8e bd       	out	0x2e, r24	; 46
 31c:	8f b5       	in	r24, 0x2f	; 47
 31e:	80 68       	ori	r24, 0x80	; 128
 320:	8f bd       	out	0x2f, r24	; 47
 322:	8f b5       	in	r24, 0x2f	; 47
 324:	8f 7b       	andi	r24, 0xBF	; 191
 326:	8f bd       	out	0x2f, r24	; 47
 328:	8f e1       	ldi	r24, 0x1F	; 31
 32a:	9e e4       	ldi	r25, 0x4E	; 78
 32c:	97 bd       	out	0x27, r25	; 39
 32e:	86 bd       	out	0x26, r24	; 38
 330:	8e b5       	in	r24, 0x2e	; 46
 332:	8e 7f       	andi	r24, 0xFE	; 254
 334:	8e bd       	out	0x2e, r24	; 46
 336:	8e b5       	in	r24, 0x2e	; 46
 338:	82 60       	ori	r24, 0x02	; 2
 33a:	8e bd       	out	0x2e, r24	; 46
 33c:	8e b5       	in	r24, 0x2e	; 46
 33e:	8b 7f       	andi	r24, 0xFB	; 251
 340:	8e bd       	out	0x2e, r24	; 46
 342:	08 95       	ret

Disassembly of section .text.Timers_enuTimer0SetCompareMatchValue:

0000042e <Timers_enuTimer0SetCompareMatchValue>:
/******************************************/
ERROR Timers_enuTimer0SetCompareMatchValue(u8 Copy_u8OCR0Value)
{
	OCR0 = Copy_u8OCR0Value ;
 42e:	8c bf       	out	0x3c, r24	; 60
	return STD_OK ; 
}
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	08 95       	ret

Disassembly of section .text.Timers_enuServoAngle:

000003ac <Timers_enuServoAngle>:
	else
	{
		return STD_NOTOK ;
	}
	return STD_OK;
}
 3ac:	85 3b       	cpi	r24, 0xB5	; 181
 3ae:	90 f4       	brcc	.+36     	; 0x3d4 <Timers_enuServoAngle+0x28>
 3b0:	28 2f       	mov	r18, r24
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	a8 ee       	ldi	r26, 0xE8	; 232
 3b6:	b3 e0       	ldi	r27, 0x03	; 3
 3b8:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__umulhisi3>
 3bc:	24 eb       	ldi	r18, 0xB4	; 180
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	40 e0       	ldi	r20, 0x00	; 0
 3c2:	50 e0       	ldi	r21, 0x00	; 0
 3c4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__udivmodsi4>
 3c8:	29 51       	subi	r18, 0x19	; 25
 3ca:	3c 4f       	sbci	r19, 0xFC	; 252
 3cc:	3b bd       	out	0x2b, r19	; 43
 3ce:	2a bd       	out	0x2a, r18	; 42
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	08 95       	ret
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	08 95       	ret

Disassembly of section .text.__vector_11:

000000ae <__vector_11>:
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
  d0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <Local_u16CounterOvf.1630>
  d4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <Local_u16CounterOvf.1630+0x1>
  d8:	01 96       	adiw	r24, 0x01	; 1
  da:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <Local_u16CounterOvf.1630+0x1>
  de:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <Local_u16CounterOvf.1630>
  e2:	83 34       	cpi	r24, 0x43	; 67
  e4:	9f 40       	sbci	r25, 0x0F	; 15
  e6:	69 f4       	brne	.+26     	; 0x102 <__vector_11+0x54>
  e8:	80 ec       	ldi	r24, 0xC0	; 192
  ea:	82 bf       	out	0x32, r24	; 50
  ec:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <Local_u16CounterOvf.1630+0x1>
  f0:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <Local_u16CounterOvf.1630>
  f4:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <Timer0_pftimer0OVF>
  f8:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <Timer0_pftimer0OVF+0x1>
  fc:	30 97       	sbiw	r30, 0x00	; 0
  fe:	09 f0       	breq	.+2      	; 0x102 <__vector_11+0x54>
 100:	09 95       	icall
 102:	ff 91       	pop	r31
 104:	ef 91       	pop	r30
 106:	bf 91       	pop	r27
 108:	af 91       	pop	r26
 10a:	9f 91       	pop	r25
 10c:	8f 91       	pop	r24
 10e:	7f 91       	pop	r23
 110:	6f 91       	pop	r22
 112:	5f 91       	pop	r21
 114:	4f 91       	pop	r20
 116:	3f 91       	pop	r19
 118:	2f 91       	pop	r18
 11a:	0f 90       	pop	r0
 11c:	0f be       	out	0x3f, r0	; 63
 11e:	0f 90       	pop	r0
 120:	1f 90       	pop	r1
 122:	18 95       	reti

Disassembly of section .text.__vector_10:

00000198 <__vector_10>:
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	2f 93       	push	r18
 1a4:	3f 93       	push	r19
 1a6:	4f 93       	push	r20
 1a8:	5f 93       	push	r21
 1aa:	6f 93       	push	r22
 1ac:	7f 93       	push	r23
 1ae:	8f 93       	push	r24
 1b0:	9f 93       	push	r25
 1b2:	af 93       	push	r26
 1b4:	bf 93       	push	r27
 1b6:	ef 93       	push	r30
 1b8:	ff 93       	push	r31
 1ba:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Local_u16CounterCTC.1636>
 1be:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <Local_u16CounterCTC.1636+0x1>
 1c2:	01 96       	adiw	r24, 0x01	; 1
 1c4:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <Local_u16CounterCTC.1636+0x1>
 1c8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Local_u16CounterCTC.1636>
 1cc:	80 31       	cpi	r24, 0x10	; 16
 1ce:	97 42       	sbci	r25, 0x27	; 39
 1d0:	59 f4       	brne	.+22     	; 0x1e8 <__vector_10+0x50>
 1d2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <Local_u16CounterCTC.1636+0x1>
 1d6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <Local_u16CounterCTC.1636>
 1da:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <Timer0_pftimer0CTC>
 1de:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <Timer0_pftimer0CTC+0x1>
 1e2:	30 97       	sbiw	r30, 0x00	; 0
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <__vector_10+0x50>
 1e6:	09 95       	icall
 1e8:	ff 91       	pop	r31
 1ea:	ef 91       	pop	r30
 1ec:	bf 91       	pop	r27
 1ee:	af 91       	pop	r26
 1f0:	9f 91       	pop	r25
 1f2:	8f 91       	pop	r24
 1f4:	7f 91       	pop	r23
 1f6:	6f 91       	pop	r22
 1f8:	5f 91       	pop	r21
 1fa:	4f 91       	pop	r20
 1fc:	3f 91       	pop	r19
 1fe:	2f 91       	pop	r18
 200:	0f 90       	pop	r0
 202:	0f be       	out	0x3f, r0	; 63
 204:	0f 90       	pop	r0
 206:	1f 90       	pop	r1
 208:	18 95       	reti

Disassembly of section .text.libgcc.div:

000002c0 <__udivmodsi4>:
 2c0:	a1 e2       	ldi	r26, 0x21	; 33
 2c2:	1a 2e       	mov	r1, r26
 2c4:	aa 1b       	sub	r26, r26
 2c6:	bb 1b       	sub	r27, r27
 2c8:	fd 01       	movw	r30, r26
 2ca:	0d c0       	rjmp	.+26     	; 0x2e6 <__udivmodsi4_ep>

000002cc <__udivmodsi4_loop>:
 2cc:	aa 1f       	adc	r26, r26
 2ce:	bb 1f       	adc	r27, r27
 2d0:	ee 1f       	adc	r30, r30
 2d2:	ff 1f       	adc	r31, r31
 2d4:	a2 17       	cp	r26, r18
 2d6:	b3 07       	cpc	r27, r19
 2d8:	e4 07       	cpc	r30, r20
 2da:	f5 07       	cpc	r31, r21
 2dc:	20 f0       	brcs	.+8      	; 0x2e6 <__udivmodsi4_ep>
 2de:	a2 1b       	sub	r26, r18
 2e0:	b3 0b       	sbc	r27, r19
 2e2:	e4 0b       	sbc	r30, r20
 2e4:	f5 0b       	sbc	r31, r21

000002e6 <__udivmodsi4_ep>:
 2e6:	66 1f       	adc	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	88 1f       	adc	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	1a 94       	dec	r1
 2f0:	69 f7       	brne	.-38     	; 0x2cc <__udivmodsi4_loop>
 2f2:	60 95       	com	r22
 2f4:	70 95       	com	r23
 2f6:	80 95       	com	r24
 2f8:	90 95       	com	r25
 2fa:	9b 01       	movw	r18, r22
 2fc:	ac 01       	movw	r20, r24
 2fe:	bd 01       	movw	r22, r26
 300:	cf 01       	movw	r24, r30
 302:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000003fa <__umulhisi3>:
 3fa:	a2 9f       	mul	r26, r18
 3fc:	b0 01       	movw	r22, r0
 3fe:	b3 9f       	mul	r27, r19
 400:	c0 01       	movw	r24, r0
 402:	a3 9f       	mul	r26, r19
 404:	70 0d       	add	r23, r0
 406:	81 1d       	adc	r24, r1
 408:	11 24       	eor	r1, r1
 40a:	91 1d       	adc	r25, r1
 40c:	b2 9f       	mul	r27, r18
 40e:	70 0d       	add	r23, r0
 410:	81 1d       	adc	r24, r1
 412:	11 24       	eor	r1, r1
 414:	91 1d       	adc	r25, r1
 416:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000043c <_fini>:
 43c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000043e <__funcs_on_exit>:
 43e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000440 <__simulator_exit>:
 440:	08 95       	ret

Disassembly of section .text.exit:

00000418 <exit>:
 418:	ec 01       	movw	r28, r24
 41a:	0e 94 1f 02 	call	0x43e	; 0x43e <__funcs_on_exit>
 41e:	0e 94 1e 02 	call	0x43c	; 0x43c <_fini>
 422:	ce 01       	movw	r24, r28
 424:	0e 94 20 02 	call	0x440	; 0x440 <__simulator_exit>
 428:	ce 01       	movw	r24, r28
 42a:	0e 94 1c 02 	call	0x438	; 0x438 <_Exit>

Disassembly of section .text._Exit:

00000438 <_Exit>:
 438:	0e 94 55 00 	call	0xaa	; 0xaa <_exit>
